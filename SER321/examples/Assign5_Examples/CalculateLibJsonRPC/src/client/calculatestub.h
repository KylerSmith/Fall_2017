/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_CALCULATESTUB_H_
#define JSONRPC_CPP_STUB_CALCULATESTUB_H_

#include <jsonrpccpp/client.h>

class calculatestub : public jsonrpc::Client
{
    public:
        calculatestub(jsonrpc::IClientConnector &conn, jsonrpc::clientVersion_t type = jsonrpc::JSONRPC_CLIENT_V2) : jsonrpc::Client(conn, type) {}

        std::string serviceInfo() 
        {
            Json::Value p;
            p = Json::nullValue;
            Json::Value result = this->CallMethod("serviceInfo",p);
            if (result.isString())
                return result.asString();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        double plus(double param01, double param02) 
        {
            Json::Value p;
            p.append(param01);
            p.append(param02);
            Json::Value result = this->CallMethod("plus",p);
            if (result.isDouble())
                return result.asDouble();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        double minus(double param01, double param02) 
        {
            Json::Value p;
            p.append(param01);
            p.append(param02);
            Json::Value result = this->CallMethod("minus",p);
            if (result.isDouble())
                return result.asDouble();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        double times(double param01, double param02) 
        {
            Json::Value p;
            p.append(param01);
            p.append(param02);
            Json::Value result = this->CallMethod("times",p);
            if (result.isDouble())
                return result.asDouble();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        double divide(double param01, double param02) 
        {
            Json::Value p;
            p.append(param01);
            p.append(param02);
            Json::Value result = this->CallMethod("divide",p);
            if (result.isDouble())
                return result.asDouble();
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
};

#endif //JSONRPC_CPP_STUB_CALCULATESTUB_H_
